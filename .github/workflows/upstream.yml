name: release-trigger
on:
  pull_request:
    branches:
      - develop
    types: [closed]
jobs:
  commit:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: 'Check out code'
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
    - name: 'Increment fix version'
      if: ${{ startsWith(github.event.pull_request.head.ref,'fix/') }}
<<<<<<< HEAD
      shell: sh
=======
      shell: bash
>>>>>>> e7520bb12fa4c6957de34ade45d77ccb5d22bdda
      run: |
        version="$(cat ./RELEASE | awk '{$1=$1};1')"
        fix=$(echo $version | cut -d '.' -f3)
        minor=$(echo $version | cut -d '.' -f2)
        major=$(echo $version | cut -d '.' -f1)
        let fix++
        new_ver="$major.$minor.$fix"
        echo -n $new_ver > ./RELEASE
    - name: 'Increment minor version'
      if: ${{ startsWith(github.event.pull_request.head.ref,'feature/') }}
<<<<<<< HEAD
      shell: sh
=======
      shell: bash
>>>>>>> e7520bb12fa4c6957de34ade45d77ccb5d22bdda
      run: |
        version="$(cat ./RELEASE | awk '{$1=$1};1')"
        fix=$(echo $version | cut -d '.' -f3)
        minor=$(echo $version | cut -d '.' -f2)
        major=$(echo $version | cut -d '.' -f1)
        let minor++
        new_ver="$major.$minor.$fix"
        echo -n $new_ver > ./RELEASE
    - name: 'Increment major version'
      if: ${{ startsWith(github.event.pull_request.head.ref,'next/') }}
<<<<<<< HEAD
      shell: sh
=======
      shell: bash
>>>>>>> e7520bb12fa4c6957de34ade45d77ccb5d22bdda
      run: |
        version="$(cat ./RELEASE | awk '{$1=$1};1')"
        fix=$(echo $version | cut -d '.' -f3)
        minor=$(echo $version | cut -d '.' -f2)
        major=$(echo $version | cut -d '.' -f1)
        let major++
        new_ver="$major.$minor.$fix"
        echo -n $new_ver > ./RELEASE
    - name: 'Get version number'
      id: meta
<<<<<<< HEAD
      shell: sh
=======
      shell: bash
>>>>>>> e7520bb12fa4c6957de34ade45d77ccb5d22bdda
      run: echo "::set-output name=VERSION::$(cat ./RELEASE | awk '{$1=$1};1')"
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
    - name: Install changelog tool
      shell: bash
      run: go get github.com/goreleaser/chglog/cmd/chglog
    - name: Generate CHANGELOG.md
      shell: bash
      env:
        VERSION: v${{ steps.meta.output.VERSION }}
      run: |
        echo "INFO: version $VERSION"
        chglog add --version $VERSION
        chglog format --template repo > CHANGELOG.md
    - name: Commit changes file
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: 'chore: pre-release'
        branch: develop
        commit_user_name: skynet-core
        tagging_message: "v${{ steps.meta.output.VERSION }}"
    - name: Trigger repository custom event
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        event-type: 'pre-release'
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'