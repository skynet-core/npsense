name: "Build and package PSense project"
on:
  push:
    tags: 
      - 'v*.*.*'
      - 'v*.*.*-beta'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Build static binaries
      uses: skynet-core/nim@v1.2
    - name: Archive psense binary
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: |
          ${{ github.workspace }}/psense
          ${{ github.workspace }}/psensepkg/cli/psensectl
  package:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Download psense artifact
      uses: actions/download-artifact@v2
      with:
        name: binaries
    - name: Generate nfpm config
      id: nfpm-cfg
      shell: bash
      env:
          GIT_REF: ${{ github.ref }}
      run: |
        ls -la
        if [[ $a == "*refs/tags/*" ]]; then
          git_tag=$(git describe --tags `git rev-list --tags --max-count=1` | tr -d 'v')
        else
          git_tag=$(cat psense.nimble | grep version | head -n 1 | cut -d '=' -f2 | awk '{$1=$1};1' | sed 's|\"||g')
        fi
        cat ./nfpm.template.yaml | sed -e "s|@git_tag|$git_tag|g" > ./nfpm.yaml
        echo "::set-output name=TAG::$git_tag"
    - name: Create deb package
      id: deb-pack
      uses: skynet-core/nfpm@v1.2
      with:
        config: nfpm.yaml
        packager: deb
    - name: Create rpm package
      id: rpm-pack
      uses: skynet-core/nfpm@v1.2
      with:
        config: nfpm.yaml
        packager: rpm
    - name: Archive psense packages
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: |
          ${{ github.workspace }}/*.deb
          ${{ github.workspace }}/*.rpm
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
    - name: Install Github-Release
      shell: bash
      run: go get github.com/github-release/github-release
    - name: Publish builds
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        github-release release --user skynet-core \
          --repo npsense \
          --tag "v${{ steps.nfpm-cfg.outputs.TAG }}" && \
        github-release upload -u skynet-core -r npsense \ 
          --tag "v${{ steps.nfpm-cfg.outputs.TAG }}" \
          --file ${{ steps.deb-pack.outputs.package }} && \
        github-release upload -u skynet-core -r npsense \
          --tag "v${{ steps.nfpm-cfg.outputs.TAG }}" \
          --file ${{ steps.rpm-pack.outputs.package }}